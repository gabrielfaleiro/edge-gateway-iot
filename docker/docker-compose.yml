version: "3.7"

services:
  # TODO: telegraf for monitoring System

  postgresql:
    # Alpine versions fail with segmentation fault on raspberry pi 4
    image: postgres:14.0-alpine3.14
    environment:
      POSTGRES_PASSWORD: postgres
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1" 
    ports:
      - "5432:5432"
    volumes:
      # - type: bind
      #   source: $DOCKER_CONFIG_DIR/config/postgresql/initdb
      #   target: /docker-entrypoint-initdb.d/
      - type: volume
        source: postgresqldata
        target: /var/lib/postgresql/data
        # Configuration: /var/lib/postgresql/data/postgresql.conf
    networks:
      - home_automation_net

  redis:
    image: redis:6.2.5-alpine
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"
    ports:
      - "6379:6379"
    volumes:
      - type: bind
        source: $DOCKER_CONFIG_DIR/config/redis/redis.conf
        target: /usr/local/etc/redis/redis.conf
      - type: volume
        source: redisdata
        target: /data
    networks:
      - home_automation_net

  # mosquitto:
  #   image: eclipse-mosquitto:2.0.12
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "1" 
  #   ports:
  #     - "1883:1883"
  #     - "9001:9001"
  #   volumes:
  #     - type: bind
  #       source: $DOCKER_CONFIG_DIR/config/mosquitto/mosquitto.conf
  #       target: /mosquitto/config/mosquitto.conf
  #     - type: volume
  #       source: mosquittodata
  #       target: /var/lib/mosquitto/
  #   networks:
  #     - home_automation_net

  mqtt-broker:
    image: emqx/emqx-edge:4.3.8-alpine-$ARCH
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1" 
    ports:
      - "1883:1883"
      - "8883:8883"
      - "9001:9001"
      - "18083:18083"
      - "11883:11883"
    volumes:
      - type: volume
        source: emqxdata
        target: /opt/emqx/data
      - type: volume
        source: emqxetc
        target: /opt/emqx/etc
      - type: volume
        source: emqxlog
        target: /opt/emqx/log
    networks:
      - home_automation_net

  nodered:
    image: nodered/node-red:2.0.6-14
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"
    ports:
      - "1880:1880"
    volumes:
      - type: volume
        source: nodereddata
        target: /data
      # - type: bind
      #   source: $DOCKER_CONFIG_DIR/config/node-red/flows.json
      #   target: /data/flows.json
      - type: bind
        source: $DOCKER_CONFIG_DIR/config/node-red/settings.js
        target: /data/settings.js
    networks:
      - home_automation_net

  grafana:
    image: grafana/grafana:8.1.5
    environment:
      GF_INSTALL_PLUGINS: redis-datasource
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"
    ports:
      - "3000:3000"
    volumes:
      - type: volume
        source: grafanadata
        target: /var/lib/grafana
      - type: volume
        source: grafanaplugins
        target: /var/lib/grafana/plugins
      # - type: bind
      #   source: ./config/grafana/grafana.ini
      #   target: /etc/grafana/grafana.ini
    networks:
      - home_automation_net

# Allocated in /var/lib/docker/volumes/...
volumes:
  redisdata:

  # mosquittodata:
    
  emqxdata:
  emqxetc:
  emqxlog:

  nodereddata:

  grafanadata:
  grafanaplugins:

  postgresqldata:

networks:
  home_automation_net:
    driver: overlay
